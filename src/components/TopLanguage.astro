---
import { colors, cn } from '@/utils'

type TLang = {
	[K: string]: string
}

const { topLang } = Astro.props
let total = 0
const langs = [...topLang.entries()]
	.sort((a, b) => b[1] - a[1])
	.map((e) => {
		total += e[1]
		return e
	})

const getStyle = (index: number, length: number) => {
	if (index === 0) return `rounded-l-full`
	if (index === length - 1) return `rounded-r-full`
	return ``
}

const getColorCode = (language: string, index: number) => {
	if (index >= 5) return ''
	return `background-color: ${colors[language].color}`
}
---

<div class='flex justify-between items-center'>
	<div
		class='w-full flex flex-row bg-gray-200 rounded-full h-2 dark:bg-gray-700'
	>
		{
			langs.map((l, i) => {
				return (
					<div
						class={cn(`h-2 ${getStyle(i, langs.length)}`)}
						style={`width: ${(l[1] / total) * 100}%; ${getColorCode(l[0], i)}`}
					/>
				)
			})
		}
	</div>
</div>

<div class='flex flex-row justify-between text-sm'>
	<div>TypeScript</div>
	<div>TypeScript</div>
</div>
<div class='flex flex-row justify-between text-sm'>
	<div>TypeScript</div>
	<div>TypeScript</div>
</div>
